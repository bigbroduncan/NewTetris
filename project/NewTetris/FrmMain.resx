<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="tmrCurrentPieceFall.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="lblPlayingField.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAcIAAAKUCAYAAACXJzgyAAAABGdBTUEAALGPC/xhBQAAGhxJREFUeF7t
        1yGO4DAUBcE52tz/UrPxRmGfug1coIgNGjjSU35+f3//aj8/P/9NdzvpNnQbug3dxqnuYggDug3dhm5D
        t2MIA7oN3YZuQ7djCAO6Dd2GbkO3YwgDug3dhm5Dt2MIA7oN3YZuQ7djCAO6Dd2GbkO3YwgDug3dhm5D
        t2MIA7oN3YZuQ7djCAO6Dd2GbkO3YwgDug3dhm5Dt2MIA7oN3YZuQ7djCAO6Dd2GbkO3YwgDug3dhm5D
        t2MIA7oN3YZuQ7djCAO6Dd2GbkO3YwgDug3dhm5Dt2MIA7oN3YZuQ7djCAO6De/b0G3odgxhQLeh29Bt
        6HYMYUC3odvQbeh2DGFAt6Hb0G3odgxhQLeh29Bt6HYMYUC3odvQbeh2DGFAt6Hb0G3odgxhQLeh29Bt
        6HYMYUC3odvQbeh2DGFAt6Hb0G3odgxhQLeh29Bt6Hae7hsHgEuNhwBwh+k3cbcvPt3tpNvQbeg2dBun
        uoshDOg2dBu6Dd2OIQzoNnQbug3djiEM6DZ0G7oN3Y4hDOg2dBu6Dd2OIQzoNrxvQ7eh2zGEAd2GbkO3
        odsxhAHdhm5Dt6HbMYQB3YZuQ7eh2zGEAd2GbkO3odsxhAHdhm5Dt6HbMYQB3YZuQ7eh2zGEAd2GbkO3
        odsxhAHdhm5Dt6HbMYQB3YZuQ7eh2zGEAd2GbkO3odsxhAHdhm5Dt6HbMYQB3YZuQ7eh2zGEAd2GbkO3
        odsxhAHdhm5Dt6HbMYQB3YZuQ7eh2zGEAd2GbkO3odsxhAHdhm5Dt6HbMYQB3YZuw/s2dDuGMKDb0G3o
        NnQ7hjCg29Bt6DZ0O4YwoNvQbeg2dDuGMKDb0G3oNnQ7T/eNA8ClxkMAuMP0m7jbF5/udtJt6DZ0G7qN
        U93FEAZ0G7oN3YZuxxAGdBu6Dd2GbscQBnQbug3dhm7HEAZ0G7oN3YZuxxAGdBu6Dd2GbscQBnQbug3d
        hm7HEAZ0G7oN3YZuxxAGdBu6Dd2GbscQBnQbug3dhm7HEAZ0G7oN3YZuxxAGdBu6Dd2G9+0YwoBuQ7eh
        29DtGMKAbkO3odvQ7RjCgG5Dt6Hb0O0YwoBuQ7eh29DtGMKAbkO3odvQ7RjCgG5Dt6Hb0O0YwoBuQ7eh
        29DtGMKAbkO3odvQ7RjCgG5Dt6Hb0O0YwoBuQ7eh29DtGMKAbkO3odvQ7RjCgG5Dt6Hb0O0YwoBuQ7eh
        29DtGMKAbkO3odvQ7RjCgG5Dt6Hb0O0YwoBuQ7eh29DtPN03DgCXGg8B4A7Tb+JuX3y620m3odvQbeg2
        TnUXQxjQbeg2dBu6HUMY0G3oNnQbuh1DGNBt6DZ0G7odQxjQbeg2dBu6HUMY0G3oNnQbuh1DGNBt6DZ0
        G7odQxjQbeg2dBu6HUMY0G3oNnQbuh1DGNBt6DZ0G7odQxjQbeg2dBu6HUMY0G3oNnQbuh1DGNBt6DZ0
        G7odQxjQbeg2dBu6HUMY0G3oNnQbuh1DGNBt6DZ0G7odQxjQbeg2dBu6HUMY0G3oNnQbuh1DGNBteN+G
        bkO3YwgDug3dhm5Dt2MIA7oN3YZuQ7djCAO6Dd2GbkO3YwgDug3dhm5Dt2MIA7oN3YZuQ7djCAO6Dd2G
        bkO3YwgDug3dhm5Dt2MIA7oN3YZuQ7djCAO6Dd2GbkO383TfOABcajwEgDtMv4m7ffHpbifdhm5Dt6Hb
        ONVdDGFAt6Hb0G3odgxhQLeh29Bt6HYMYUC3odvQbeh2DGFAt6Hb0G3odgxhQLeh29Bt6HYMYUC34X0b
        ug3djiEM6DZ0G7oN3Y4hDOg2dBu6Dd2OIQzoNnQbug3djiEM6DZ0G7oN3Y4hDOg2dBu6Dd2OIQzoNnQb
        ug3djiEM6DZ0G7oN3Y4hDOg2dBu6Dd2OIQzoNnQbug3djiEM6DZ0G7oN3Y4hDOg2dBu6Dd2OIQzoNnQb
        ug3djiEM6DZ0G7oN3Y4hDOg2dBu6Dd2OIQzoNnQbug3djiEM6DZ0G7oN3Y4hDOg2dBu6Dd2OIQzoNnQb
        3reh2zGEAd2GbkO3odsxhAHdhm5Dt6HbMYQB3YZuQ7eh23m6bxwALjUeAsAdpt/E3b74dLeTbkO3odvQ
        bZzqLoYwoNvQbeg2dDuGMKDb0G3oNnQ7hjCg29Bt6DZ0O4YwoNvQbeg2dDuGMKDb0G3oNnQ7hjCg29Bt
        6DZ0O4YwoNvQbeg2dDuGMKDb0G3oNnQ7hjCg29Bt6DZ0O4YwoNvQbeg2dDuGMKDb0G3oNnQ7hjCg29Bt
        6Da8b8cQBnQbug3dhm7HEAZ0G7oN3YZuxxAGdBu6Dd2GbscQBnQbug3dhm7HEAZ0G7oN3YZuxxAGdBu6
        Dd2GbscQBnQbug3dhm7HEAZ0G7oN3YZuxxAGdBu6Dd2GbscQBnQbug3dhm7HEAZ0G7oN3YZuxxAGdBu6
        Dd2GbscQBnQbug3dhm7HEAZ0G7oN3YZuxxAGdBu6Dd2GbufpvnEAuNR4CAB3mH4Td/vi091Oug3dhm5D
        t3HqfRdDGNBt6DZ0G7odQxjQbeg2dBu6HUMY0G3oNnQbuh1DGNBt6DZ0G7odQxjQbeg2dBu6HUMY0G3o
        NnQbuh1DGNBt6DZ0G7odQxjQbeg2dBu6HUMY0G3oNnQbuh1DGNBt6DZ0G7odQxjQbeg2dBu6HUMY0G3o
        NnQbuh1DGNBt6DZ0G7odQxjQbeg2dBu6HUMY0G3oNnQbuh1DGNBt6DZ0G7odQxjQbeg2dBu6HUMY0G3o
        NnQbuh1DGNBteN+GbkO3YwgDug3dhm5Dt2MIA7oN3YZuQ7djCAO6Dd2GbkO3YwgDug3dhm5Dt2MIA7oN
        3YZuQ7djCAO6Dd2GbkO3YwgDug3dhm5Dt2MIA7oN3YZuQ7fzdN84AFxqPASAO0y/ibt98eluJ92GbkO3
        ods41V0MYUC3odvQbeh2DGFAt6Hb0G3odgxhQLeh29Bt6HYMYUC3odvQbeh2DGFAt6Hb0G3odgxhQLeh
        29Bt6HYMYUC34X0bug3djiEM6DZ0G7oN3Y4hDOg2dBu6Dd2OIQzoNnQbug3djiEM6DZ0G7oN3Y4hDOg2
        dBu6Dd2OIQzoNnQbug3djiEM6DZ0G7oN3Y4hDOg2dBu6Dd2OIQzoNnQbug3djiEM6DZ0G7oN3Y4hDOg2
        dBu6Dd2OIQzoNnQbug3djiEM6DZ0G7oN3Y4hDOg2dBu6Dd2OIQzoNnQbug3djiEM6DZ0G7oN3Y4hDOg2
        dBu6Dd2OIQzoNnQb3reh2zGEAd2GbkO3odsxhAHdhm5Dt6HbebpvHAAuNR4CwB2m38Tdvvh0t5NuQ7eh
        29BtnOouhjCg29Bt6DZ0O4YwoNvQbeg2dDuGMKDb0G3oNnQ7hjCg29Bt6DZ0O4YwoNvQbeg2dDuGMKDb
        0G3oNnQ7hjCg29Bt6DZ0O4YwoNvQbeg2dDuGMKDb0G3oNnQ7hjCg29Bt6DZ0O4YwoNvQbeg2dDuGMKDb
        0G3oNnQ7hjCg29Bt6Da8b8cQBnQbug3dhm7HEAZ0G7oN3YZuxxAGdBu6Dd2GbscQBnQbug3dhm7HEAZ0
        G7oN3YZuxxAGdBu6Dd2GbscQBnQbug3dhm7HEAZ0G7oN3YZuxxAGdBu6Dd2GbscQBnQbug3dhm7HEAZ0
        G7oN3YZuxxAGdBu6Dd2GbscQBnQbug3dhm7HEAZ0G7oN3YZu5+m+cQC41HgIAHeYfhN3++LT3U66Dd2G
        bkO3caq7GMKAbkO3odvQDdvT4W4+rIZuQ7eh27ituxjCgG5Dt6Hb0O0YwoBuQ7eh29DtGMKAbkO3odvQ
        7RjCgG5Dt6Hb0O0YwoBuQ7eh29DtGMKAbkO3odvQ7RjCgG5Dt6Hb0O0YwoBuQ7eh29DtGMKAbkO3odvQ
        7RjCgG5Dt6Hb0O0YwoBuQ7eh29DtGMKAbkO3odvQ7RjCgG5Dt6Hb0O0YwoBuQ7eh29DtGMKAbkO3odvQ
        7RjCgG5Dt6Hb0O0YwoBuQ7eh29DtGMKAbkO3odvQ7RjCgG5Dt6Hb0O0YwoBuQ7eh29DtGMKAbkO3odvQ
        7RjCgG5Dt6Hb0O0YwoBuQ7eh29DtGMKAbkO3odvQ7RjCgG5Dt6Hb0O083TcOAJcaDwHgDtNv4m5ffLrb
        Sbeh29Bt6DZOdRdDGNBt6DZ0G7odQxjQbeg2dBu6HUMY0G3oNnQbuh1DGNBt6DZ0G7odQxjQbeg2dBu6
        HUMY0G3oNnQbuh1DGNBt6DZ0G7odQxjQbXjfhm5Dt2MIA7oN3YZuQ7djCAO6Dd2GbkO3YwgDug3dhm5D
        t2MIA7oN3YZuQ7djCAO6Dd2GbkO3YwgDug3dhm5Dt2MIA7oN3YZuQ7djCAO6Dd2GbkO3YwgDug3dhm5D
        t2MIA7oN3YZuQ7djCAO6Dd2GbkO3YwgDug3dhm5Dt2MIA7oN3YZuQ7djCAO6Dd2GbkO3YwgDug3dhm5D
        t2MIA7oN3YZuQ7djCAO6Dd2GbkO3YwgDug3dhvdt6HYMYUC3odvQbeh2nu4bB4BLjYcAcIfpN3G3Lz7d
        7aTb0G3oNnQbp7qLIQzoNnQbug3djiEM6DZ0G7oN3Y4hDOg2dBu6Dd2OIQzoNnQbug3djiEM6DZ0G7oN
        3Y4hDOg2dBu6Dd2OIQzoNnQbug3djiEM6DZ0G7oN3Y4hDOg2dBu6Dd2OIQzoNnQbug3djiEM6DZ0G7oN
        3Y4hDOg2dBu6Dd2OIQzoNnQbug3djiEM6DZ0G7oN79sxhAHdhm5Dt6HbMYQB3YZuQ7eh2zGEAd2GbkO3
        odsxhAHdhm5Dt6HbMYQB3YZuQ7eh2zGEAd2GbkO3odsxhAHdhm5Dt6HbMYQB3YZuQ7eh2zGEAd2GbkO3
        odsxhAHdhm5Dt6HbMYQB3YZuQ7eh2zGEAd2GbkO3odsxhAHdhm5Dt6HbebpvHAAuNR4CwB2m38Tdvvh0
        t5NuQ7eh29BtnOouhjCg29Bt6DZ0O4YwoNvQbeg2dMP2dLibD6uh29Bt6DZu6y6GMKDb0G3oNnQ7hjCg
        29Bt6DZ0O4YwoNvQbeg2dDuGMKDb0G3oNnQ7hjCg29Bt6DZ0O4YwoNvQbeg2dDuGMKDb0G3oNnQ7hjCg
        29Bt6DZ0O4YwoNvQbeg2dDuGMKDb0G3oNnQ7hjCg29Bt6DZ0O4YwoNvQbeg2dDuGMKDb0G3oNnQ7hjCg
        29Bt6DZ0O4YwoNvQbeg2dDuGMKDb0G3oNnQ7hjCg29Bt6DZ0O4YwoNvQbeg2dDuGMKDb0G3oNnQ7hjCg
        29Bt6DZ0O4YwoNvQbeg2dDuGMKDb0G3oNnQ7hjCg29Bt6DZ0O4YwoNvQbeg2dDtP940DwKXGQwC4w/Sb
        uNsXn+520m3oNnQbuo1T3cUQBnQbug3dhm7HEAZ0G7oN3YZuxxAGdBu6Dd2GbscQBnQbug3dhm7HEAZ0
        G7oN3YZuxxAGdBu6Dd2GbscQBnQbug3dhm7HEAZ0G7oN3YZuxxAGdBvet6Hb0O0YwoBuQ7eh29DtGMKA
        bkO3odvQ7RjCgG5Dt6Hb0O0YwoBuQ7eh29DtGMKAbkO3odvQ7RjCgG5Dt6Hb0O0YwoBuQ7eh29DtGMKA
        bkO3odvQ7RjCgG5Dt6Hb0O0YwoBuQ7eh29DtGMKAbkO3odvQ7RjCgG5Dt6Hb0O0YwoBuQ7eh29DtGMKA
        bkO3odvQ7RjCgG5Dt6Hb0O0YwoBuQ7eh29DtGMKAbkO3odvQ7RjCgG5Dt+F9G7qdp/vGAeBS4yEA3GH6
        Tdzti093O+k2dBu6Dd3Gqe5iCAO6Dd2GbkO3YwgDug3dhm5Dt2MIA7oN3YZuQ7djCAO6Dd2GbkO3YwgD
        ug3dhm5Dt2MIA7oN3YZuQ7djCAO6Dd2GbkO3YwgDug3dhm5Dt2MIA7oN3YZuQ7djCAO6Dd2GbkO3YwgD
        ug3dhm5Dt2MIA7oN3YZuQ7djCAO6Dd2GbkO3YwgDug3dhm5Dt2MIA7oN3YZuw/t2DGFAt6Hb0G3odgxh
        QLeh29Bt6HYMYUC3odvQbeh2DGFAt6Hb0G3odgxhQLeh29Bt6HYMYUC3odvQbeh2DGFAt6Hb0G3odgxh
        QLeh29Bt6HYMYUC3odvQbeh2DGFAt6Hb0G3odgxhQLeh29Bt6HYMYUC3odvQbeh2nu4bB4BLjYcAcIfp
        N3G3Lz7d7aTb0G3oNnQbp7qLIQzoNnQbug3djiEM6DZ0G7oN3Y4hDOg2dBu6Dd2wPR3u5sNq6DZ0G7qN
        27qLIQzoNnQbug3djiEM6DZ0G7oN3Y4hDOg2dBu6Dd2OIQzoNnQbug3djiEM6DZ0G7oN3Y4hDOg2dBu6
        Dd2OIQzoNnQbug3djiEM6DZ0G7oN3Y4hDOg2dBu6Dd2OIQzoNnQbug3djiEM6DZ0G7oN3Y4hDOg2dBu6
        Dd2OIQzoNnQbug3djiEM6DZ0G7oN3Y4hDOg2dBu6Dd2OIQzoNnQbug3djiEM6DZ0G7oN3Y4hDOg2dBu6
        Dd2OIQzoNnQbug3djiEM6DZ0G7oN3Y4hDOg2dBu6Dd2OIQzoNnQbug3djiEM6DZ0G7oN3c7TfeMAcKnx
        EADuMP0m7vbFp7uddBu6Dd2GbuNUdzGEAd2GbkO3odsxhAHdhm5Dt6HbMYQB3YZuQ7eh2zGEAd2GbkO3
        odsxhAHdhm5Dt6HbMYQB3YZuQ7eh2zGEAd2GbkO3odsxhAHdhm5Dt6HbMYQB3YZuQ7eh2zGEAd2G923o
        NnQ7hjCg29Bt6DZ0O4YwoNvQbeg2dDuGMKDb0G3oNnQ7hjCg29Bt6DZ0O4YwoNvQbeg2dDuGMKDb0G3o
        NnQ7hjCg29Bt6DZ0O4YwoNvQbeg2dDuGMKDb0G3oNnQ7hjCg29Bt6DZ0O4YwoNvQbeg2dDuGMKDb0G3o
        NnQ7hjCg29Bt6DZ0O4YwoNvQbeg2dDuGMKDb0G3oNnQ7hjCg29Bt6DZ0O4YwoNvQbeg2dDtP940DwKXG
        QwC4w/SbuNsXn+520m3oNnQbuo1T3cUQBnQbug3dhm7HEAZ0G7oN3YZuxxAGdBu6Dd2GbscQBnQbug3d
        hm7HEAZ0G7oN3YZuxxAGdBu6Dd2GbscQBnQbug3dhm7HEAZ0G7oN3YZuxxAGdBu6Dd2GbscQBnQbug3d
        hm7HEAZ0G7oN3YZuxxAGdBu6Dd2GbscQBnQbug3dhm7HEAZ0G7oN3YZuxxAGdBu6Dd2GbscQBnQbug3d
        hvftGMKAbkO3odvQ7RjCgG5Dt6Hb0O0YwoBuQ7eh29DtGMKAbkO3odvQ7RjCgG5Dt6Hb0O0YwoBuQ7eh
        29DtGMKAbkO3odvQ7RjCgG5Dt6Hb0O0YwoBuQ7eh29DtGMKAbkO3odvQ7RjCgG5Dt6Hb0O083TcOAJca
        DwHgDtNv4m5ffLrbSbeh29Bt6DZOdRdDGNBt6DZ0G7odQxjQbeg2dBu6HUMY0G3oNnQbuh1DGNBt6DZ0
        G7phezrczYfV0G3oNnQbt3UXQxjQbeg2dBu6HUMY0G3oNnQbuh1DGNBt6DZ0G7odQxjQbeg2dBu6HUMY
        0G3oNnQbuh1DGNBt6DZ0G7odQxjQbeg2dBu6HUMY0G3oNnQbuh1DGNBt6DZ0G7odQxjQbeg2dBu6HUMY
        0G3oNnQbuh1DGNBt6DZ0G7odQxjQbeg2dBu6HUMY0G3oNnQbuh1DGNBt6DZ0G7odQxjQbeg2dBu6HUMY
        0G3oNnQbuh1DGNBt6DZ0G7odQxjQbeg2dBu6HUMY0G3oNnQbuh1DGNBt6DZ0G7odQxjQbeg2dBu6naf7
        xgHgUuMhANxh+k3c7YtPdzvpNnQbug3dxqnuYggDug3dhm5Dt2MIA7oN3YZuQ7djCAO6Dd2GbkO3YwgD
        ug3dhm5Dt2MIA7oN3YZuQ7djCAO6Dd2GbkO3YwgDug3dhm5Dt2MIA7oN3YZuQ7djCAO6Dd2GbkO3YwgD
        ug3dhm5Dt2MIA7oN79vQbeh2DGFAt6Hb0G3odgxhQLeh29Bt6HYMYUC3odvQbeh2DGFAt6Hb0G3odgxh
        QLeh29Bt6HYMYUC3odvQbeh2DGFAt6Hb0G3odgxhQLeh29Bt6HYMYUC3odvQbeh2DGFAt6Hb0G3odgxh
        QLeh29Bt6HYMYUC3odvQbeh2DGFAt6Hb0G3odgxhQLeh29Bt6HYMYUC3odvQbeh2DGFAt6Hb0G3odp7u
        GweAS42HAHCH6Tdxty8+3e2k29Bt6DZ0G6e6iyEM6DZ0G7oN3Y4hDOg2dBu6Dd2OIQzoNnQbug3djiEM
        6DZ0G7oN3Y4hDOg2dBu6Dd2OIQzoNnQbug3djiEM6DZ0G7oN3Y4hDOg2dBu6Dd2OIQzoNnQbug3djiEM
        6DZ0G7oN3Y4hDOg2dBu6Dd2OIQzoNnQbug3djiEM6DZ0G7oN3Y4hDOg2dBu6Dd2OIQzoNnQbug3djiEM
        6DZ0G7oN3Y4hDOg2dBvet6HbMYQB3YZuQ7eh2zGEAd2GbkO3odsxhAHdhm5Dt6HbMYQB3YZuQ7eh2zGE
        Ad2GbkO3odsxhAHdhm5Dt6HbMYQB3YZuQ7eh2zGEAd2GbkO3odsxhAHdhm5Dt6HbMYQB3YZuQ7eh23m6
        bxwALjUeAsAdpt/E3b74dLeTbkO3odvQbZzqLoYwoNvQbeg2dDuGMKDb0G3oNnQ7hjCg29Bt6DZ0O4Yw
        oNvQbeg2dDuGMKDb0G3oNrxvxxAGdBu6Dd2GbscQBnQbug3dhm7HEAZ0G7oN3YZuxxAGdBu6Dd2GbscQ
        BnQbug3dhm7HEAZ0G7oN3YZuxxAGdBu6Dd2GbscQBnQbug3dhm7HEAZ0G7oN3YZuxxAGdBu6Dd2GbscQ
        BnQbug3dhm7HEAZ0G7oN3YZuxxAGdBu6Dd2GbscQBnQbug3dhm7HEAZ0G7oN3YZuxxAGdBu6Dd2GbscQ
        BnQbug3dhm7HEAZ0G7oN3YZu2J4Od/NhNXQbug3dxm3dxRAGdBu6Dd2GbscQBnQbug3dhm7HEAZ0G7oN
        3YZuxxAGdBu6Dd2GbuX37x+DSh1Z+fHppQAAAABJRU5ErkJggg==
</value>
  </data>
</root>